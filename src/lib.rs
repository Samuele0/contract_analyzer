extern crate ethereum_types;

pub mod contract_analyzer;
pub mod contract_data;
pub mod contract_utils;
pub mod evm_execution;
pub mod evm_memory;
pub mod evm_types;
pub mod net;

#[cfg(test)]
mod tests {
    use crate::contract_analyzer::analyze_contract;
    use std::fs::File;
    use std::io::prelude::*;
    use std::time::Instant;

    fn test_code_s(code: &[u8]) {
        let time = Instant::now();
        let len = code.len();
        analyze_contract(code);
        let elapsed = time.elapsed();
        println!("Bytes: {}, time:{}", len, elapsed.as_nanos())
    }
    fn test_code(code: Vec<u8>) {
        let time = Instant::now();
        let len = code.len();
        analyze_contract(&code[..]);
        let elapsed = time.elapsed();
        println!("Bytes: {}, time:{}", len, elapsed.as_nanos())
    }
    #[test]
    fn simple_contract() {
        let code = include_bytes!("../contracts/bytecodes/simple_contract");
        /*let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0xc7, 0x80, 0x61, 0x00, 0x1f, 0x60, 0x00, 0x39, 0x60,
            0x00, 0xf3, 0x00, 0x60, 0x80, 0x60, 0x40, 0x52, 0x60, 0x04, 0x36, 0x10, 0x60, 0x48,
            0x57, 0x63, 0xff, 0xff, 0xff, 0xff, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x35, 0x04, 0x16, 0x63,
            0x10, 0x03, 0xe2, 0xd2, 0x81, 0x14, 0x60, 0x4d, 0x57, 0x80, 0x63, 0xb6, 0x9e, 0xf8,
            0xa8, 0x14, 0x60, 0x74, 0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x34, 0x80, 0x15,
            0x60, 0x58, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x62, 0x60, 0x04, 0x35,
            0x60, 0x86, 0x56, 0x5b, 0x60, 0x40, 0x80, 0x51, 0x91, 0x82, 0x52, 0x51, 0x90, 0x81,
            0x90, 0x03, 0x60, 0x20, 0x01, 0x90, 0xf3, 0x5b, 0x34, 0x80, 0x15, 0x60, 0x7f, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x62, 0x60, 0x95, 0x56, 0x5b, 0x60, 0x00,
            0x80, 0x54, 0x82, 0x01, 0x90, 0x81, 0x90, 0x55, 0x91, 0x90, 0x50, 0x56, 0x5b, 0x60,
            0x00, 0x54, 0x81, 0x56, 0x00, 0xa1, 0x65, 0x62, 0x7a, 0x7a, 0x72, 0x30, 0x58, 0x20,
            0x63, 0xaa, 0x00, 0x92, 0x0d, 0x82, 0x42, 0x33, 0xab, 0x53, 0x07, 0xef, 0x3a, 0x37,
            0x9c, 0x75, 0x7b, 0xdb, 0xee, 0x62, 0xfe, 0x00, 0xfe, 0x36, 0xa5, 0xd8, 0x52, 0xc7,
            0x66, 0xe5, 0x8f, 0xef, 0x00, 0x29,
        ];
        let mut buffer= File::create("contracts/bytecodes/simple_contract").unwrap();
        buffer.write_all(&code[..]).unwrap();*/
        test_code_s(code);
    }
    #[test]
    fn contract2() {
        let code:Vec<u8>= vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0xc7, 0x80, 0x61, 0x00, 0x1f, 0x60, 0x00, 0x39, 0x60,
            0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x32, 0x57, 0x60,
            0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x2e, 0x64, 0xce, 0xc1, 0x14, 0x60, 0x37,
            0x57, 0x80, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x14, 0x60, 0x53, 0x57, 0x5b, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x60, 0x3d, 0x60, 0x7e, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82,
            0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03,
            0x90, 0xf3, 0x5b, 0x60, 0x7c, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x20, 0x81, 0x10,
            0x15, 0x60, 0x67, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80,
            0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x60, 0x87,
            0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x80, 0x54, 0x90, 0x50, 0x90, 0x56, 0x5b, 0x80,
            0x60, 0x00, 0x81, 0x90, 0x55, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66,
            0x73, 0x58, 0x22, 0x12, 0x20, 0x8c, 0x66, 0x13, 0x68, 0xbf, 0xfe, 0x1f, 0xf6, 0x1a,
            0x29, 0x4c, 0x33, 0x1f, 0x5c, 0x87, 0x71, 0xa3, 0xf1, 0x0c, 0x95, 0x39, 0xc7, 0x16,
            0xcf, 0x2d, 0xf6, 0xe0, 0x4f, 0xc1, 0x92, 0xe3, 0x90, 0x64, 0x73, 0x6f, 0x6c, 0x63,
            0x43, 0x00, 0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn contract3() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x33, 0x60, 0x00, 0x80, 0x61, 0x01, 0x00, 0x0a, 0x81, 0x54,
            0x81, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x19, 0x16, 0x90, 0x83, 0x73,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x02, 0x17, 0x90, 0x55, 0x50, 0x60, 0x00,
            0x80, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x60, 0x00,
            0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x7f, 0x34, 0x28, 0x27, 0xc9, 0x79,
            0x08, 0xe5, 0xe2, 0xf7, 0x11, 0x51, 0xc0, 0x85, 0x02, 0xa6, 0x6d, 0x44, 0xb6, 0xf7,
            0x58, 0xe3, 0xac, 0x2f, 0x1d, 0xe9, 0x5f, 0x02, 0xeb, 0x95, 0xf0, 0xa7, 0x35, 0x60,
            0x40, 0x51, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xa3, 0x61, 0x02, 0xa8, 0x80,
            0x61, 0x00, 0xdc, 0x60, 0x00, 0x39, 0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40,
            0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50,
            0x60, 0x04, 0x36, 0x10, 0x61, 0x00, 0x36, 0x57, 0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c,
            0x80, 0x63, 0x89, 0x3d, 0x20, 0xe8, 0x14, 0x61, 0x00, 0x3b, 0x57, 0x80, 0x63, 0xa6,
            0xf9, 0xda, 0xe1, 0x14, 0x61, 0x00, 0x85, 0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b,
            0x61, 0x00, 0x43, 0x61, 0x00, 0xc9, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x73,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0x16, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91,
            0x03, 0x90, 0xf3, 0x5b, 0x61, 0x00, 0xc7, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x20,
            0x81, 0x10, 0x15, 0x61, 0x00, 0x9b, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01,
            0x90, 0x80, 0x80, 0x35, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x90, 0x60,
            0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x61, 0x00, 0xf2, 0x56, 0x5b,
            0x00, 0x5b, 0x60, 0x00, 0x80, 0x60, 0x00, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a,
            0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x90, 0x50, 0x90, 0x56,
            0x5b, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0x16, 0x33, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x14, 0x61, 0x01, 0xb4,
            0x57, 0x60, 0x40, 0x51, 0x7f, 0x08, 0xc3, 0x79, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x60, 0x04, 0x01,
            0x80, 0x80, 0x60, 0x20, 0x01, 0x82, 0x81, 0x03, 0x82, 0x52, 0x60, 0x13, 0x81, 0x52,
            0x60, 0x20, 0x01, 0x80, 0x7f, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x20, 0x69, 0x73,
            0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x50, 0x60, 0x20,
            0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xfd, 0x5b, 0x80,
            0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90,
            0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16,
            0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x7f, 0x34, 0x28, 0x27, 0xc9, 0x79,
            0x08, 0xe5, 0xe2, 0xf7, 0x11, 0x51, 0xc0, 0x85, 0x02, 0xa6, 0x6d, 0x44, 0xb6, 0xf7,
            0x58, 0xe3, 0xac, 0x2f, 0x1d, 0xe9, 0x5f, 0x02, 0xeb, 0x95, 0xf0, 0xa7, 0x35, 0x60,
            0x40, 0x51, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xa3, 0x80, 0x60, 0x00, 0x80,
            0x61, 0x01, 0x00, 0x0a, 0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0x02, 0x19, 0x16, 0x90, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x02,
            0x17, 0x90, 0x55, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0xc9, 0xa4, 0xf9, 0x80, 0x58, 0x1f, 0x75, 0xd1, 0xa4, 0xef, 0xc1,
            0xa9, 0x75, 0xc7, 0x54, 0x5e, 0xd8, 0x39, 0x2e, 0xdf, 0x47, 0xd0, 0xcd, 0x43, 0xe1,
            0xe4, 0x20, 0xbc, 0x70, 0x9b, 0xd9, 0xc0, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }

    #[test]
    fn struct_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0xe1, 0x80, 0x61, 0x00, 0x1f, 0x60, 0x00, 0x39, 0x60,
            0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x32, 0x57, 0x60,
            0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x2e, 0x64, 0xce, 0xc1, 0x14, 0x60, 0x37,
            0x57, 0x80, 0x63, 0xce, 0xed, 0xb9, 0xaa, 0x14, 0x60, 0x53, 0x57, 0x5b, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x60, 0x3d, 0x60, 0x88, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82,
            0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03,
            0x90, 0xf3, 0x5b, 0x60, 0x86, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x40, 0x81, 0x10,
            0x15, 0x60, 0x67, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80,
            0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x80, 0x35, 0x90, 0x60, 0x20,
            0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x60, 0x94, 0x56, 0x5b, 0x00, 0x5b,
            0x60, 0x00, 0x80, 0x60, 0x01, 0x01, 0x54, 0x90, 0x50, 0x90, 0x56, 0x5b, 0x81, 0x60,
            0x00, 0x80, 0x01, 0x81, 0x90, 0x55, 0x50, 0x80, 0x60, 0x00, 0x60, 0x01, 0x01, 0x81,
            0x90, 0x55, 0x50, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0xa7, 0xb6, 0x69, 0x83, 0x05, 0x56, 0x88, 0xbd, 0x54, 0x53, 0xea,
            0xa4, 0x85, 0x32, 0x9d, 0x2b, 0xe4, 0x93, 0x5a, 0x17, 0xc1, 0x5c, 0x89, 0x65, 0x6c,
            0x71, 0x74, 0xbb, 0x7b, 0x28, 0x6b, 0xa2, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn vector_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01, 0x1f, 0x80, 0x61, 0x00, 0x20, 0x60, 0x00, 0x39,
            0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f,
            0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x32, 0x57,
            0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x8f, 0x88, 0x70, 0x8b, 0x14, 0x60,
            0x37, 0x57, 0x80, 0x63, 0xce, 0xed, 0xb9, 0xaa, 0x14, 0x60, 0x76, 0x57, 0x5b, 0x60,
            0x00, 0x80, 0xfd, 0x5b, 0x60, 0x60, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x20, 0x81,
            0x10, 0x15, 0x60, 0x4b, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80,
            0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x60,
            0xab, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91,
            0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b, 0x60, 0xa9, 0x60,
            0x04, 0x80, 0x36, 0x03, 0x60, 0x40, 0x81, 0x10, 0x15, 0x60, 0x8a, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90,
            0x92, 0x91, 0x90, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50,
            0x50, 0x50, 0x60, 0xca, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x80, 0x82, 0x81, 0x54,
            0x81, 0x10, 0x60, 0xb8, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00, 0x52, 0x60, 0x20, 0x60,
            0x00, 0x20, 0x01, 0x54, 0x90, 0x50, 0x91, 0x90, 0x50, 0x56, 0x5b, 0x80, 0x60, 0x00,
            0x83, 0x81, 0x54, 0x81, 0x10, 0x60, 0xd7, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00, 0x52,
            0x60, 0x20, 0x60, 0x00, 0x20, 0x01, 0x81, 0x90, 0x55, 0x50, 0x50, 0x50, 0x56, 0xfe,
            0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58, 0x22, 0x12, 0x20, 0x5b, 0xe5, 0x73, 0x71,
            0xb4, 0x07, 0x75, 0xb6, 0xb2, 0xab, 0x43, 0xaf, 0x79, 0xd2, 0xb1, 0x17, 0x9c, 0xee,
            0x77, 0x9f, 0x84, 0x63, 0x66, 0x14, 0x8f, 0x7f, 0x2c, 0x98, 0x57, 0xd4, 0xa2, 0x2f,
            0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00, 0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn vector_test2() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01, 0x2c, 0x80, 0x61, 0x00, 0x20, 0x60, 0x00, 0x39,
            0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f,
            0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x32, 0x57,
            0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x8f, 0x88, 0x70, 0x8b, 0x14, 0x60,
            0x37, 0x57, 0x80, 0x63, 0xce, 0xed, 0xb9, 0xaa, 0x14, 0x60, 0x76, 0x57, 0x5b, 0x60,
            0x00, 0x80, 0xfd, 0x5b, 0x60, 0x60, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x20, 0x81,
            0x10, 0x15, 0x60, 0x4b, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80,
            0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x60,
            0xab, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91,
            0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b, 0x60, 0xa9, 0x60,
            0x04, 0x80, 0x36, 0x03, 0x60, 0x40, 0x81, 0x10, 0x15, 0x60, 0x8a, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90,
            0x92, 0x91, 0x90, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50,
            0x50, 0x50, 0x60, 0xcb, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x60, 0x01, 0x82, 0x81,
            0x54, 0x81, 0x10, 0x60, 0xb9, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00, 0x52, 0x60, 0x20,
            0x60, 0x00, 0x20, 0x01, 0x54, 0x90, 0x50, 0x91, 0x90, 0x50, 0x56, 0x5b, 0x60, 0x05,
            0x60, 0x00, 0x54, 0x01, 0x60, 0x00, 0x81, 0x90, 0x55, 0x50, 0x80, 0x60, 0x01, 0x83,
            0x81, 0x54, 0x81, 0x10, 0x60, 0xe4, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00, 0x52, 0x60,
            0x20, 0x60, 0x00, 0x20, 0x01, 0x81, 0x90, 0x55, 0x50, 0x50, 0x50, 0x56, 0xfe, 0xa2,
            0x64, 0x69, 0x70, 0x66, 0x73, 0x58, 0x22, 0x12, 0x20, 0xb7, 0x37, 0x4f, 0xeb, 0x2c,
            0x97, 0xef, 0xdc, 0xbd, 0x09, 0x3b, 0x6d, 0x35, 0x70, 0xef, 0x75, 0x5a, 0x16, 0x9f,
            0xcd, 0x23, 0x3c, 0x6e, 0x71, 0x37, 0x27, 0xdf, 0x24, 0xa6, 0xbf, 0x20, 0x7e, 0x64,
            0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00, 0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn hashmap_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01, 0x26, 0x80, 0x61, 0x00, 0x20, 0x60, 0x00, 0x39,
            0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f,
            0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x32, 0x57,
            0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x8f, 0x88, 0x70, 0x8b, 0x14, 0x60,
            0x37, 0x57, 0x80, 0x63, 0xce, 0xed, 0xb9, 0xaa, 0x14, 0x60, 0x76, 0x57, 0x5b, 0x60,
            0x00, 0x80, 0xfd, 0x5b, 0x60, 0x60, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60, 0x20, 0x81,
            0x10, 0x15, 0x60, 0x4b, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80,
            0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x60,
            0xab, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91,
            0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b, 0x60, 0xa9, 0x60,
            0x04, 0x80, 0x36, 0x03, 0x60, 0x40, 0x81, 0x10, 0x15, 0x60, 0x8a, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90,
            0x92, 0x91, 0x90, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50,
            0x50, 0x50, 0x60, 0xc8, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x60, 0x01, 0x60, 0x00,
            0x83, 0x81, 0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52, 0x60, 0x20, 0x01, 0x60, 0x00,
            0x20, 0x54, 0x90, 0x50, 0x91, 0x90, 0x50, 0x56, 0x5b, 0x60, 0x05, 0x60, 0x00, 0x54,
            0x01, 0x60, 0x00, 0x81, 0x90, 0x55, 0x50, 0x80, 0x60, 0x01, 0x60, 0x00, 0x84, 0x81,
            0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52, 0x60, 0x20, 0x01, 0x60, 0x00, 0x20, 0x81,
            0x90, 0x55, 0x50, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0xb7, 0x30, 0x26, 0xd3, 0xfe, 0xd2, 0x95, 0x3c, 0xba, 0x79, 0xdd,
            0xce, 0x89, 0x5a, 0x02, 0x03, 0xfc, 0xce, 0xdf, 0xa0, 0x60, 0xb2, 0x47, 0xd9, 0x40,
            0x85, 0xb1, 0x2d, 0xfc, 0xe0, 0x8e, 0xce, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }

    #[test]
    fn vector_iteration_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0xcd, 0x80, 0x61, 0x00, 0x1f, 0x60, 0x00, 0x39, 0x60,
            0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x28, 0x57, 0x60,
            0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x14, 0x60, 0x2d,
            0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x60, 0x56, 0x60, 0x04, 0x80, 0x36, 0x03,
            0x60, 0x20, 0x81, 0x10, 0x15, 0x60, 0x41, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81,
            0x01, 0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50,
            0x50, 0x50, 0x60, 0x58, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x80, 0x90, 0x50, 0x5b,
            0x60, 0x00, 0x80, 0x54, 0x90, 0x50, 0x81, 0x10, 0x15, 0x60, 0x93, 0x57, 0x80, 0x82,
            0x01, 0x60, 0x00, 0x82, 0x81, 0x54, 0x81, 0x10, 0x60, 0x79, 0x57, 0xfe, 0x5b, 0x90,
            0x60, 0x00, 0x52, 0x60, 0x20, 0x60, 0x00, 0x20, 0x01, 0x81, 0x90, 0x55, 0x50, 0x80,
            0x80, 0x60, 0x01, 0x01, 0x91, 0x50, 0x50, 0x60, 0x5e, 0x56, 0x5b, 0x50, 0x50, 0x56,
            0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58, 0x22, 0x12, 0x20, 0xff, 0x61, 0xcd,
            0xbb, 0x59, 0x73, 0xbf, 0xc0, 0xd9, 0x40, 0x05, 0x13, 0x06, 0x02, 0xbb, 0x66, 0x16,
            0x46, 0xb8, 0xd5, 0x51, 0x73, 0xd8, 0x75, 0xa2, 0x16, 0x1a, 0x2d, 0xa6, 0x0b, 0xdf,
            0x53, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00, 0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }

    #[test]
    fn struct_vector_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0xd3, 0x80, 0x61, 0x00, 0x1f, 0x60, 0x00, 0x39, 0x60,
            0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x28, 0x57, 0x60,
            0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x14, 0x60, 0x2d,
            0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x60, 0x56, 0x60, 0x04, 0x80, 0x36, 0x03,
            0x60, 0x20, 0x81, 0x10, 0x15, 0x60, 0x41, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81,
            0x01, 0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50,
            0x50, 0x50, 0x60, 0x58, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x19, 0x60, 0x00, 0x82, 0x81,
            0x54, 0x81, 0x10, 0x60, 0x66, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00, 0x52, 0x60, 0x20,
            0x60, 0x00, 0x20, 0x90, 0x60, 0x03, 0x02, 0x01, 0x60, 0x01, 0x01, 0x54, 0x01, 0x60,
            0x00, 0x82, 0x81, 0x54, 0x81, 0x10, 0x60, 0x85, 0x57, 0xfe, 0x5b, 0x90, 0x60, 0x00,
            0x52, 0x60, 0x20, 0x60, 0x00, 0x20, 0x90, 0x60, 0x03, 0x02, 0x01, 0x60, 0x01, 0x01,
            0x81, 0x90, 0x55, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0x55, 0xda, 0x54, 0xa3, 0x1d, 0x83, 0x9a, 0x65, 0xa0, 0x55, 0xd9,
            0xd3, 0xea, 0x7d, 0x4f, 0x92, 0xc9, 0xb6, 0xac, 0xa4, 0x5e, 0x01, 0x2f, 0x1f, 0xba,
            0x48, 0x8e, 0x8d, 0x6d, 0x5e, 0x25, 0x12, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn fixed_length_array() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57, 0x60, 0x00, 0x80,
            0xfd, 0x5b, 0x50, 0x60, 0xa4, 0x80, 0x61, 0x00, 0x1e, 0x60, 0x00, 0x39, 0x60, 0x00,
            0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x60, 0x0f, 0x57, 0x60,
            0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10, 0x60, 0x28, 0x57, 0x60, 0x00,
            0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x14, 0x60, 0x2d, 0x57,
            0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x60, 0x56, 0x60, 0x04, 0x80, 0x36, 0x03, 0x60,
            0x20, 0x81, 0x10, 0x15, 0x60, 0x41, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01,
            0x90, 0x80, 0x80, 0x35, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50,
            0x50, 0x60, 0x58, 0x56, 0x5b, 0x00, 0x5b, 0x80, 0x60, 0x00, 0x60, 0x03, 0x60, 0x05,
            0x81, 0x10, 0x60, 0x66, 0x57, 0xfe, 0x5b, 0x01, 0x81, 0x90, 0x55, 0x50, 0x50, 0x56,
            0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58, 0x22, 0x12, 0x20, 0x95, 0x6a, 0xbd,
            0x5d, 0x10, 0x2b, 0x0c, 0x86, 0x51, 0x51, 0xef, 0x6b, 0xc2, 0x3e, 0x98, 0x8e, 0xa6,
            0x64, 0x0d, 0x00, 0x22, 0x97, 0x9e, 0xab, 0xf2, 0xf5, 0xa2, 0x41, 0xfd, 0x54, 0x7a,
            0x7f, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00, 0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn full_contract_test() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0x40, 0x51, 0x60, 0x40, 0x80, 0x61, 0x08, 0x40, 0x83,
            0x39, 0x81, 0x01, 0x80, 0x60, 0x40, 0x52, 0x81, 0x01, 0x90, 0x80, 0x80, 0x51, 0x90,
            0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x80, 0x51, 0x90, 0x60, 0x20, 0x01, 0x90,
            0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x80, 0x60, 0x00, 0x80, 0x61, 0x01, 0x00, 0x0a,
            0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x19, 0x16, 0x90,
            0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x02, 0x17, 0x90, 0x55, 0x50,
            0x81, 0x42, 0x01, 0x60, 0x01, 0x81, 0x90, 0x55, 0x50, 0x50, 0x50, 0x61, 0x07, 0xa9,
            0x80, 0x61, 0x00, 0x97, 0x60, 0x00, 0x39, 0x60, 0x00, 0xf3, 0x00, 0x60, 0x80, 0x60,
            0x40, 0x52, 0x60, 0x04, 0x36, 0x10, 0x61, 0x00, 0x78, 0x57, 0x60, 0x00, 0x35, 0x7c,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x90, 0x04, 0x63, 0xff, 0xff, 0xff, 0xff, 0x16, 0x80, 0x63, 0x19, 0x98, 0xae,
            0xef, 0x14, 0x61, 0x00, 0x7d, 0x57, 0x80, 0x63, 0x2a, 0x24, 0xf4, 0x6c, 0x14, 0x61,
            0x00, 0x87, 0x57, 0x80, 0x63, 0x38, 0xaf, 0x3e, 0xed, 0x14, 0x61, 0x00, 0x9e, 0x57,
            0x80, 0x63, 0x3c, 0xcf, 0xd6, 0x0b, 0x14, 0x61, 0x00, 0xf5, 0x57, 0x80, 0x63, 0x91,
            0xf9, 0x01, 0x57, 0x14, 0x61, 0x01, 0x24, 0x57, 0x80, 0x63, 0xd5, 0x7b, 0xde, 0x79,
            0x14, 0x61, 0x01, 0x7b, 0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x61, 0x00, 0x85,
            0x61, 0x01, 0xa6, 0x56, 0x5b, 0x00, 0x5b, 0x34, 0x80, 0x15, 0x61, 0x00, 0x93, 0x57,
            0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x61, 0x00, 0x9c, 0x61, 0x03, 0xcc, 0x56, 0x5b,
            0x00, 0x5b, 0x34, 0x80, 0x15, 0x61, 0x00, 0xaa, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b,
            0x50, 0x61, 0x00, 0xb3, 0x61, 0x06, 0x07, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82,
            0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80,
            0x91, 0x03, 0x90, 0xf3, 0x5b, 0x34, 0x80, 0x15, 0x61, 0x01, 0x01, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01, 0x0a, 0x61, 0x06, 0x2c, 0x56, 0x5b, 0x60, 0x40,
            0x51, 0x80, 0x82, 0x15, 0x15, 0x15, 0x15, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50,
            0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b, 0x34, 0x80, 0x15, 0x61,
            0x01, 0x30, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01, 0x39, 0x61, 0x07,
            0x51, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x52, 0x60, 0x20,
            0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b, 0x34,
            0x80, 0x15, 0x61, 0x01, 0x87, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x61, 0x01,
            0x90, 0x61, 0x07, 0x77, 0x56, 0x5b, 0x60, 0x40, 0x51, 0x80, 0x82, 0x81, 0x52, 0x60,
            0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xf3, 0x5b,
            0x60, 0x01, 0x54, 0x42, 0x11, 0x15, 0x15, 0x15, 0x61, 0x02, 0x20, 0x57, 0x60, 0x40,
            0x51, 0x7f, 0x08, 0xc3, 0x79, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x60, 0x04, 0x01, 0x80, 0x80, 0x60,
            0x20, 0x01, 0x82, 0x81, 0x03, 0x82, 0x52, 0x60, 0x16, 0x81, 0x52, 0x60, 0x20, 0x01,
            0x80, 0x7f, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x6c, 0x72, 0x65,
            0x61, 0x64, 0x79, 0x20, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x50, 0x60, 0x20, 0x01, 0x91, 0x50,
            0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xfd, 0x5b, 0x60, 0x03, 0x54, 0x34,
            0x11, 0x15, 0x15, 0x61, 0x02, 0x99, 0x57, 0x60, 0x40, 0x51, 0x7f, 0x08, 0xc3, 0x79,
            0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x81, 0x52, 0x60, 0x04, 0x01, 0x80, 0x80, 0x60, 0x20, 0x01, 0x82, 0x81, 0x03,
            0x82, 0x52, 0x60, 0x1e, 0x81, 0x52, 0x60, 0x20, 0x01, 0x80, 0x7f, 0x54, 0x68, 0x65,
            0x72, 0x65, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x69, 0x73, 0x20,
            0x61, 0x20, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x20, 0x62, 0x69, 0x64, 0x2e, 0x00,
            0x00, 0x81, 0x52, 0x50, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80,
            0x91, 0x03, 0x90, 0xfd, 0x5b, 0x60, 0x00, 0x60, 0x03, 0x54, 0x14, 0x15, 0x15, 0x61,
            0x03, 0x17, 0x57, 0x60, 0x03, 0x54, 0x60, 0x04, 0x60, 0x00, 0x60, 0x02, 0x60, 0x00,
            0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52, 0x60,
            0x20, 0x01, 0x60, 0x00, 0x20, 0x60, 0x00, 0x82, 0x82, 0x54, 0x01, 0x92, 0x50, 0x50,
            0x81, 0x90, 0x55, 0x50, 0x5b, 0x33, 0x60, 0x02, 0x60, 0x00, 0x61, 0x01, 0x00, 0x0a,
            0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x19, 0x16, 0x90,
            0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x02, 0x17, 0x90, 0x55, 0x50,
            0x34, 0x60, 0x03, 0x81, 0x90, 0x55, 0x50, 0x7f, 0xf4, 0x75, 0x7a, 0x49, 0xb3, 0x26,
            0x03, 0x64, 0x64, 0xbe, 0xc6, 0xfe, 0x41, 0x9a, 0x4a, 0xe3, 0x8c, 0x8a, 0x02, 0xce,
            0x3e, 0x68, 0xbf, 0x08, 0x09, 0x67, 0x4f, 0x6a, 0xab, 0x8a, 0xd3, 0x00, 0x33, 0x34,
            0x60, 0x40, 0x51, 0x80, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x52, 0x60, 0x20, 0x01, 0x82, 0x81,
            0x52, 0x60, 0x20, 0x01, 0x92, 0x50, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03,
            0x90, 0xa1, 0x56, 0x5b, 0x60, 0x01, 0x54, 0x42, 0x10, 0x15, 0x15, 0x15, 0x61, 0x04,
            0x46, 0x57, 0x60, 0x40, 0x51, 0x7f, 0x08, 0xc3, 0x79, 0xa0, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x60, 0x04,
            0x01, 0x80, 0x80, 0x60, 0x20, 0x01, 0x82, 0x81, 0x03, 0x82, 0x52, 0x60, 0x16, 0x81,
            0x52, 0x60, 0x20, 0x01, 0x80, 0x7f, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20,
            0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 0x20, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x52, 0x50, 0x60,
            0x20, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03, 0x90, 0xfd, 0x5b,
            0x60, 0x05, 0x60, 0x00, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x60,
            0xff, 0x16, 0x15, 0x15, 0x15, 0x61, 0x04, 0xf1, 0x57, 0x60, 0x40, 0x51, 0x7f, 0x08,
            0xc3, 0x79, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x81, 0x52, 0x60, 0x04, 0x01, 0x80, 0x80, 0x60, 0x20, 0x01, 0x82,
            0x81, 0x03, 0x82, 0x52, 0x60, 0x23, 0x81, 0x52, 0x60, 0x20, 0x01, 0x80, 0x7f, 0x61,
            0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x73, 0x20,
            0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x63,
            0x61, 0x6c, 0x6c, 0x81, 0x52, 0x60, 0x20, 0x01, 0x7f, 0x65, 0x64, 0x2e, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
            0x52, 0x50, 0x60, 0x40, 0x01, 0x91, 0x50, 0x50, 0x60, 0x40, 0x51, 0x80, 0x91, 0x03,
            0x90, 0xfd, 0x5b, 0x60, 0x01, 0x60, 0x05, 0x60, 0x00, 0x61, 0x01, 0x00, 0x0a, 0x81,
            0x54, 0x81, 0x60, 0xff, 0x02, 0x19, 0x16, 0x90, 0x83, 0x15, 0x15, 0x02, 0x17, 0x90,
            0x55, 0x50, 0x7f, 0xda, 0xec, 0x45, 0x82, 0xd5, 0xd9, 0x59, 0x56, 0x88, 0xc8, 0xc9,
            0x85, 0x45, 0xfd, 0xd1, 0xc6, 0x96, 0xd4, 0x1c, 0x6a, 0xea, 0xeb, 0x63, 0x67, 0x37,
            0xe8, 0x4e, 0xd2, 0xf5, 0xc0, 0x0e, 0xda, 0x60, 0x02, 0x60, 0x00, 0x90, 0x54, 0x90,
            0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16,
            0x60, 0x03, 0x54, 0x60, 0x40, 0x51, 0x80, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x52, 0x60, 0x20,
            0x01, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x92, 0x50, 0x50, 0x50, 0x60, 0x40, 0x51,
            0x80, 0x91, 0x03, 0x90, 0xa1, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00,
            0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0x16, 0x61, 0x08, 0xfc, 0x60, 0x03, 0x54, 0x90, 0x81, 0x15,
            0x02, 0x90, 0x60, 0x40, 0x51, 0x60, 0x00, 0x60, 0x40, 0x51, 0x80, 0x83, 0x03, 0x81,
            0x85, 0x88, 0x88, 0xf1, 0x93, 0x50, 0x50, 0x50, 0x50, 0x15, 0x80, 0x15, 0x61, 0x06,
            0x04, 0x57, 0x3d, 0x60, 0x00, 0x80, 0x3e, 0x3d, 0x60, 0x00, 0xfd, 0x5b, 0x50, 0x56,
            0x5b, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x56, 0x5b, 0x60, 0x00, 0x80, 0x60,
            0x04, 0x60, 0x00, 0x33, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81, 0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52,
            0x60, 0x20, 0x01, 0x60, 0x00, 0x20, 0x54, 0x90, 0x50, 0x60, 0x00, 0x81, 0x11, 0x15,
            0x61, 0x07, 0x48, 0x57, 0x60, 0x00, 0x60, 0x04, 0x60, 0x00, 0x33, 0x73, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x81,
            0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52, 0x60, 0x20, 0x01, 0x60, 0x00, 0x20, 0x81,
            0x90, 0x55, 0x50, 0x33, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x61, 0x08,
            0xfc, 0x82, 0x90, 0x81, 0x15, 0x02, 0x90, 0x60, 0x40, 0x51, 0x60, 0x00, 0x60, 0x40,
            0x51, 0x80, 0x83, 0x03, 0x81, 0x85, 0x88, 0x88, 0xf1, 0x93, 0x50, 0x50, 0x50, 0x50,
            0x15, 0x15, 0x61, 0x07, 0x47, 0x57, 0x80, 0x60, 0x04, 0x60, 0x00, 0x33, 0x73, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16,
            0x81, 0x52, 0x60, 0x20, 0x01, 0x90, 0x81, 0x52, 0x60, 0x20, 0x01, 0x60, 0x00, 0x20,
            0x81, 0x90, 0x55, 0x50, 0x60, 0x00, 0x91, 0x50, 0x61, 0x07, 0x4d, 0x56, 0x5b, 0x5b,
            0x60, 0x01, 0x91, 0x50, 0x5b, 0x50, 0x90, 0x56, 0x5b, 0x60, 0x02, 0x60, 0x00, 0x90,
            0x54, 0x90, 0x61, 0x01, 0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x81, 0x56, 0x5b, 0x60, 0x03, 0x54, 0x81, 0x56, 0x00, 0xa1, 0x65, 0x62,
            0x7a, 0x7a, 0x72, 0x30, 0x58, 0x20, 0xaa, 0xc1, 0xc2, 0x1d, 0x6c, 0x24, 0x5d, 0x33,
            0x02, 0x16, 0x22, 0x97, 0xf9, 0x86, 0x8a, 0x6a, 0xe8, 0x24, 0x28, 0xb3, 0x74, 0xf3,
            0x6b, 0x91, 0x27, 0x99, 0xf2, 0x5a, 0xba, 0x87, 0x78, 0x08, 0x00, 0x29,
        ];
        test_code(code)
    }
    #[test]
    fn calltest() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0x40, 0x51, 0x61, 0x01, 0x8c, 0x38, 0x03, 0x80, 0x61,
            0x01, 0x8c, 0x83, 0x39, 0x81, 0x81, 0x01, 0x60, 0x40, 0x52, 0x60, 0x20, 0x81, 0x10,
            0x15, 0x61, 0x00, 0x33, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80,
            0x80, 0x51, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x80,
            0x60, 0x00, 0x80, 0x61, 0x01, 0x00, 0x0a, 0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0x02, 0x19, 0x16, 0x90, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x02, 0x17, 0x90, 0x55, 0x50, 0x50, 0x60, 0xf9, 0x80, 0x61, 0x00, 0x93,
            0x60, 0x00, 0x39, 0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80,
            0x15, 0x60, 0x0f, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04, 0x36, 0x10,
            0x60, 0x28, 0x57, 0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63, 0x28, 0xb5, 0xe3,
            0x2b, 0x14, 0x60, 0x2d, 0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x60, 0x33, 0x60,
            0x35, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90, 0x61, 0x01, 0x00,
            0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0x16, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x61, 0x01, 0xf4, 0x60,
            0x40, 0x51, 0x82, 0x63, 0xff, 0xff, 0xff, 0xff, 0x16, 0x60, 0xe0, 0x1b, 0x81, 0x52,
            0x60, 0x04, 0x01, 0x80, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50, 0x60,
            0x00, 0x60, 0x40, 0x51, 0x80, 0x83, 0x03, 0x81, 0x60, 0x00, 0x87, 0x80, 0x3b, 0x15,
            0x80, 0x15, 0x60, 0xaa, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x5a, 0xf1, 0x15,
            0x80, 0x15, 0x60, 0xbd, 0x57, 0x3d, 0x60, 0x00, 0x80, 0x3e, 0x3d, 0x60, 0x00, 0xfd,
            0x5b, 0x50, 0x50, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0x9c, 0x09, 0x16, 0xa2, 0xeb, 0x48, 0xd5, 0x00, 0x17, 0xeb, 0x6a,
            0x75, 0xb8, 0x30, 0x19, 0xf8, 0xcb, 0x46, 0x52, 0x54, 0x17, 0x52, 0xbb, 0xe1, 0xfc,
            0x67, 0x13, 0x45, 0x3e, 0xd4, 0x6b, 0xe7, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
    #[test]
    fn calltest2() {
        let code = vec![
            0x60, 0x80, 0x60, 0x40, 0x52, 0x34, 0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00,
            0x80, 0xfd, 0x5b, 0x50, 0x60, 0x40, 0x51, 0x61, 0x02, 0x26, 0x38, 0x03, 0x80, 0x61,
            0x02, 0x26, 0x83, 0x39, 0x81, 0x81, 0x01, 0x60, 0x40, 0x52, 0x60, 0x20, 0x81, 0x10,
            0x15, 0x61, 0x00, 0x33, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80,
            0x80, 0x51, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x80,
            0x60, 0x00, 0x80, 0x61, 0x01, 0x00, 0x0a, 0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0x02, 0x19, 0x16, 0x90, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x02, 0x17, 0x90, 0x55, 0x50, 0x50, 0x61, 0x01, 0x92, 0x80, 0x61, 0x00,
            0x94, 0x60, 0x00, 0x39, 0x60, 0x00, 0xf3, 0xfe, 0x60, 0x80, 0x60, 0x40, 0x52, 0x34,
            0x80, 0x15, 0x61, 0x00, 0x10, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x60, 0x04,
            0x36, 0x10, 0x61, 0x00, 0x36, 0x57, 0x60, 0x00, 0x35, 0x60, 0xe0, 0x1c, 0x80, 0x63,
            0x28, 0xb5, 0xe3, 0x2b, 0x14, 0x61, 0x00, 0x3b, 0x57, 0x80, 0x63, 0xa2, 0xdc, 0x6b,
            0xbb, 0x14, 0x61, 0x00, 0x45, 0x57, 0x5b, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x61, 0x00,
            0x43, 0x61, 0x00, 0x89, 0x56, 0x5b, 0x00, 0x5b, 0x61, 0x00, 0x87, 0x60, 0x04, 0x80,
            0x36, 0x03, 0x60, 0x20, 0x81, 0x10, 0x15, 0x61, 0x00, 0x5b, 0x57, 0x60, 0x00, 0x80,
            0xfd, 0x5b, 0x81, 0x01, 0x90, 0x80, 0x80, 0x35, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0x16, 0x90, 0x60, 0x20, 0x01, 0x90, 0x92, 0x91, 0x90, 0x50, 0x50, 0x50, 0x61,
            0x01, 0x19, 0x56, 0x5b, 0x00, 0x5b, 0x60, 0x00, 0x80, 0x90, 0x54, 0x90, 0x61, 0x01,
            0x00, 0x0a, 0x90, 0x04, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x73, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x63, 0x60, 0x57, 0x36, 0x1d, 0x61, 0x01, 0xf4,
            0x60, 0x40, 0x51, 0x82, 0x63, 0xff, 0xff, 0xff, 0xff, 0x16, 0x60, 0xe0, 0x1b, 0x81,
            0x52, 0x60, 0x04, 0x01, 0x80, 0x82, 0x81, 0x52, 0x60, 0x20, 0x01, 0x91, 0x50, 0x50,
            0x60, 0x00, 0x60, 0x40, 0x51, 0x80, 0x83, 0x03, 0x81, 0x60, 0x00, 0x87, 0x80, 0x3b,
            0x15, 0x80, 0x15, 0x61, 0x00, 0xff, 0x57, 0x60, 0x00, 0x80, 0xfd, 0x5b, 0x50, 0x5a,
            0xf1, 0x15, 0x80, 0x15, 0x61, 0x01, 0x13, 0x57, 0x3d, 0x60, 0x00, 0x80, 0x3e, 0x3d,
            0x60, 0x00, 0xfd, 0x5b, 0x50, 0x50, 0x50, 0x50, 0x56, 0x5b, 0x80, 0x60, 0x00, 0x80,
            0x61, 0x01, 0x00, 0x0a, 0x81, 0x54, 0x81, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0x02, 0x19, 0x16, 0x90, 0x83, 0x73, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
            0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x16, 0x02,
            0x17, 0x90, 0x55, 0x50, 0x50, 0x56, 0xfe, 0xa2, 0x64, 0x69, 0x70, 0x66, 0x73, 0x58,
            0x22, 0x12, 0x20, 0x5f, 0x6f, 0xac, 0x97, 0xf8, 0x8b, 0xab, 0xc6, 0xe0, 0xa9, 0xff,
            0xa8, 0xc0, 0x62, 0x85, 0x77, 0x1b, 0xc9, 0x57, 0x8c, 0xb4, 0x79, 0x4e, 0x08, 0xed,
            0x4a, 0x71, 0x3c, 0xab, 0xef, 0x14, 0x35, 0x64, 0x73, 0x6f, 0x6c, 0x63, 0x43, 0x00,
            0x06, 0x06, 0x00, 0x33,
        ];
        test_code(code)
    }
}
